@import 'tailwindcss';
@plugin '@tailwindcss/forms';
@import '@skeletonlabs/skeleton';

@source '../node_modules/@skeletonlabs/skeleton-svelte/dist';

:root {
  --very-light-color: #FFF6E0;
  --light-color: #FFEEC7;
  --semi-light-color: #FFE29E;
  --dark-color: #151515;
  --menu-dark-color: #1F1F1F;
  --semi-dark-color: #38352C;
  --hover-color: #FF8133;
  --error-color: #DD0000;
  --faded-dark-color: color-mix(in oklab, var(--semi-dark-color) 20%, transparent);
  --faded-light-color: color-mix(in oklab, var(--light-color) 20%, transparent);
  --faded-backdrop-color: color-mix(in oklab, var(--dark-color) 50%, transparent);
}

.main-style {
  background-color: var(--very-light-color);
  color: var(--dark-color);
  border-color: var(--dark-color);
  font-family: "Open Sans", sans-serif;

  @media (prefers-color-scheme: dark) {
    background-color: var(--dark-color);
    color: var(--very-light-color);
    border-color: var(--very-light-color);
  }
}

.menu-colors {
  background-color: var(--dark-color);
  color: var(--very-light-color);

  @media (prefers-color-scheme: dark) {
    background-color: var(--menu-dark-color);
  }
}

/**
 * Tailwind classes:
 * rounded-md
 * p-3
 * transition-colors
 * ease-[cubic-bezier(0,0,0.2,1)]
 * duration-150
 * hover:bg-[var(--semi-dark-color)]
 */
.menu-hover {
  border-radius: var(--radius-md);
  padding: calc(var(--spacing) * 3);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  --tw-ease: cubic-bezier(0,0,0.2,1);
  transition-timing-function: cubic-bezier(0,0,0.2,1);
  --tw-duration: 150ms;
  transition-duration: 150ms;

  &:hover {
    @media (hover: hover) {
      background-color: var(--semi-dark-color);
    }
  }
}

/**
 * Tailwind classes:
 * border-1
 * border-[var(--light-color)]
 * bg-[var(--light-color)]
 * dark:bg-[var(--dark-color)]
 * rounded-md
 * shadow-md
 * transition-colors
 * ease-[cubic-bezier(0,0,0.2,1)]
 * duration-200
 * hover:bg-[var(--semi-light-color)]
 * hover:border-[var(--semi-light-color)]
 * dark:hover:text-[var(--dark-color)]
 * active:bg-[var(--hover-color)]
 * active:border-[var(--hover-color)]
 */
.button-style {
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--light-color);
  background-color: var(--light-color);
  border-radius: var(--radius-md);
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-ease: cubic-bezier(0,0,0.2,1);
  transition-timing-function: cubic-bezier(0,0,0.2,1);
  --tw-duration: 200ms;
  transition-duration: 200ms;

  &:hover {
    @media (hover: hover) {
      background-color: var(--semi-light-color);
      border-color: var(--semi-light-color);
    }
  }
  &:active {
    background-color: var(--hover-color);
    border-color: var(--hover-color);
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--dark-color);

    &:hover {
      @media (hover: hover) {
        color: var(--dark-color);
      }
    }
  }
}

/**
 * Tailwind classes:
 * rounded-sm
 * px-2
 * py-1
 * -ml-2
 * transition-colors
 * ease-[cubic-bezier(0,0,0.2,1)]
 * duration-200
 * hover:bg-[var(--light-color)]
 * hover:text-[var(--dark-color)]
 * dark:hover:text-[var(--dark-color)]
 * hover:shadow-sm
 */
.link-hover {
  border-radius: var(--radius-sm);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 1);
  margin-left: calc(var(--spacing) * -2);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  --tw-ease: cubic-bezier(0,0,0.2,1);
  transition-timing-function: cubic-bezier(0,0,0.2,1);
  --tw-duration: 200ms;
  transition-duration: 200ms;

  &:hover {
    @media (hover: hover) {
      background-color: var(--light-color);
      color: var(--dark-color);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--dark-color);
      }
    }
  }
}

.link {
  &:hover {
    color: var(--hover-color);
    text-decoration: underline;
  }
}

.subheading {
  font-weight: 600;
  color: color-mix(in srgb, currentColor 63%, transparent);
}

.subheading-light {
  font-weight: 300;
  color: color-mix(in srgb, currentColor 63%, transparent);
}

.rich-text p {
  margin-top: 1px;
  margin-bottom: 1px;
}

/* Empty lines in Sanity blocks are represented as <p></p> but aren't rendered with actual spacing, so add a margin. */
.rich-text ul + p {
  margin-top: 12px;
}

.rich-text img + p {
  margin-bottom: 12px;
}

.rich-text ul {
  list-style-position: outside;
}

.rich-text ul li {
  list-style-type: disc;
  margin-left: 16px;
}

.rich-text ul li li {
  list-style-type: circle;
  margin-left: 24px;
}

.rich-text ul li li li {
  list-style-type: square;
  margin-left: 32px;
}

.rich-text a {
  text-decoration: underline;

  &:hover {
    color: var(--hover-color);  
  }
}

.min-height {
  height: min-content;
}
